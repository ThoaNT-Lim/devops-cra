# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # This workflow contains multiple jobs
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install
      # build and test the apps
      - name: build
        run: |
          npm run build
          npm test
  push_to_Docker_Hub:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # build docker image and push to docker hub
    # only if the app build and test successfully
    needs: [build_test]

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REACTUSERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.REACTUSERNAME }}/simple:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.REACTUSERNAME }}/simple:latest  
      - name: verify
        run: echo "Build and deploy docker success"
  deploy: 
    runs-on: ubuntu-lastest
    permissions:
      package: write
      content: read

      steps: 
        - name: Deploy
          uses: appleboy/ssh-action@main
          with:
            # script connect -> trỏ đến folder learn_github -> pull new code --> run docker compose up -d --build để run code mới trên server
            before_script: |
              - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
              - eval $(ssh-agent -s)
              - mkdir -p ~/.ssh
              - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
              - chmod 700 ~/.ssh/id_rsa
              - eval "$(ssh-agent -s)"
              - ssh-add ~/.ssh/id_rsa
              - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
              - apt-get install rsync -y -qq
              - apt-get install curl -y -qq
            script: |
              - echo "Deploying to server dev"
              - ssh -i ~/.ssh/gitlab -o StrictHostKeyChecking=no root@14.225.192.79 -p 22

              echo "connect to  root@${{ secrets.BUILD_HOSTING_NAME }} "

              cd /home/www/simple
              git pull
              
              echo " pull soucre code success"
              docker compose up -d --build
              echo " docker compose success"

